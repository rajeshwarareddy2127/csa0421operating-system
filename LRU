#include<stdio.h>
#include<stdlib.h>
#define max_frames 3
int findlru(int time[],int n)
{
	int min=time[0],pos=0;
	int i;
	for(i=1;i<n;i++)
	{
		if(time[i]<min)
		{
			min=time[i];
			pos=i;
		}
	}
	return pos;
}
int displayframes(int frames[])
{
	int i;
	for(i=0;i<max_frames;i++)
	{
		if(frames[i]==-1)
		{
			printf("[ ]");
		}
		else
			{
				printf("[%d]",frames[i]);
			}
	}
	printf("\n");
}
int lrupage(int pages[],int n)
{
	int frames[max_frames];
	int counter=0;
	int time[max_frames];
	int pagefaults=0;
	int i;
	for(i=0;i<max_frames;i++)
	{
		frames[i]=-1;
	}
	for(i=0;i<n;i++)
	{
		int page=pages[i];
		int flag1=0,flag2=0;
		for(int j=0;j<max_frames;j++)
		{
			if(frames[j]==page)
			{
				counter++;
				time[j]=counter;
				flag1=flag2=1;
				printf("pages %d already in frame:",page);
				displayframes(frames);
				break;
			}
			
		}
		if(flag1==0)
		{
			for(int j=0;j<max_frames;j++)
			{
				if(frames[j]==-1)
				{
					counter++;
					pagefaults++;
					frames[j]=page;
					time[j]=counter;
					flag2=1;
					printf("page %d loaded into frames:",page);
					displayframes(frames);
					break;
				}
			}
		}
		if (flag2==0)
		{
			int pos= findlru(time,max_frames);
			counter++;
			pagefaults++;
			frames[pos]=page;
			time[pos]=counter;
			printf("page %d replaced with %d:",frames[pos],page);
			displayframes(frames);
		}
	}
	printf("\ntotal page faults:%d\n",pagefaults);
}
int main()
{
	int pages[]={1,3,0,0,3,5,6,3};
	int n=sizeof(pages)/sizeof(pages[0]);
	printf("lru page replacement simulator\n");
	printf("page reference string:");
	for(int i=0;i<n;i++)
	{
		printf("%d ",pages[i]);
	}
	printf("\n\n");
	lrupage(pages,n);
	return 0;
}
