input:
#include <stdio.h>
#include <windows.h>

int main() {
    DWORD child_pid, parent_pid;

    // Create a new process
    STARTUPINFO si;
    PROCESS_INFORMATION pi;
    ZeroMemory(&si, sizeof(si));
    ZeroMemory(&pi, sizeof(pi));

    if (!CreateProcess(NULL,   // No module name (use command line)
        "child_process.exe",    // Command line
        NULL,                   // Process handle not inheritable
        NULL,                   // Thread handle not inheritable
        FALSE,                  // Set handle inheritance to FALSE
        0,                      // No creation flags
        NULL,                   // Use parent's environment block
        NULL,                   // Use parent's starting directory
        &si,                    // Pointer to STARTUPINFO structure
        &pi))                   // Pointer to PROCESS_INFORMATION structure
    {
        printf("CreateProcess failed (%d).\n", GetLastError());
        return 1;
    }

    child_pid = pi.dwProcessId;

    // Get current process ID
    parent_pid = GetCurrentProcessId();

    printf("Parent process: PID = %lu\n", parent_pid);
    printf("Child process: PID = %lu\n", child_pid);

    // Wait for child process to exit
    WaitForSingleObject(pi.hProcess, INFINITE);

    // Close process and thread handles
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);

    return 0;
}
output:
CreateProcess failed (2).
